name: Docker Build and Deploy

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      MONGO_PROD_DB: ${{ secrets.MONGO_PROD_DB }}
      FRONTEND_LINK: "https://devpulse.org"
      NODE_ENV: "production"
      ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
      ADMIN_PASS: ${{ secrets.ADMIN_PASS }}
      COORDINATOR_EMAIL: ${{ secrets.COORDINATOR_EMAIL }}
      COORDINATOR_PASS: ${{ secrets.COORDINATOR_PASS }}
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_PASSWORD2 }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME2 }}" --password-stdin

      - name: Check if Docker image exists
        id: image-check
        run: |
          IMAGE_EXISTS=$(docker manifest inspect ${{ secrets.DOCKER_HUB_USERNAME2 }}/atlp-devpulse-bn:latest > /dev/null 2>&1 && echo true || echo false)
          echo "Image exists: $IMAGE_EXISTS"
          echo "::set-output name=exists::$IMAGE_EXISTS"

      - name: Build and push Docker image (if not exists)
        if: steps.image-check.outputs.exists == 'false'
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: ${{ secrets.DOCKER_HUB_USERNAME2 }}/atlp-devpulse-bn
          tags: |
            latest
            ${{ github.sha }} # Use SHA for traceability
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USERNAME2 }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD2 }}
          buildArgs: |
            NODE_ENV=production
            MONGO_PROD_DB=${{ secrets.MONGO_PROD_DB }}

      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.DO_KEY }}
          port: ${{ secrets.DO_PORT }}
          envs: MONGO_PROD_DB,REGISTER_FRONTEND_URL,REGISTER_ORG_FRONTEND_URL,NODE_ENV,FRONTEND_LINK,ADMIN_EMAIL,ADMIN_PASS,COORDINATOR_EMAIL,COORDINATOR_PASS,GH_TOKEN
          script: |
            # Create environment file
            cat << EOF > env
            ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}
            ADMIN_PASS=${{ secrets.ADMIN_PASS }}
            COORDINATOR_EMAIL=${{ secrets.COORDINATOR_EMAIL }}
            COORDINATOR_PASS=${{ secrets.COORDINATOR_PASS }}
            FRONTEND_LINK=${{ secrets.FRONTEND_LINK }}
            REGISTER_FRONTEND_URL=${{ secrets.REGISTER_FRONTEND_URL }}
            REGISTER_ORG_FRONTEND_URL=${{ secrets.REGISTER_ORG_FRONTEND_URL }}
            GH_TOKEN=${{ secrets.GH_TOKEN }}
            MONGO_PROD_DB=${{ secrets.MONGO_PROD_DB }}
            NODE_ENV=${{ secrets.NODE_ENV }}
            EOF

            # Pull the latest image
            docker pull ${{ secrets.DOCKER_HUB_USERNAME2 }}/atlp-devpulse-bn:latest

            # Stop and remove existing container if it exists
            docker stop $(docker ps -q --filter publish=4000) || true
            docker rm $(docker ps -aq --filter publish=4000) || true

            # Run new container
            docker run -d \
              -p 4000:4000 \
              --env-file env \
              ${{ secrets.DOCKER_HUB_USERNAME2 }}/atlp-devpulse-bn:latest

            # Clean up
            rm env
